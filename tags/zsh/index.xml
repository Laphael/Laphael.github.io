<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>zsh on 寂静·流年</title><link>https://example.com/tags/zsh/</link><description>Recent content in zsh on 寂静·流年</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>Example Person</copyright><lastBuildDate>Mon, 12 Dec 2022 02:04:54 +0800</lastBuildDate><atom:link href="https://example.com/tags/zsh/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux下使用miniconda的一些设置</title><link>https://example.com/posts/d96c6166/</link><pubDate>Mon, 12 Dec 2022 02:04:54 +0800</pubDate><guid>https://example.com/posts/d96c6166/</guid><description>&lt;p>在&lt;code>kali&lt;/code>的&lt;code>zsh&lt;/code>环境中使用&lt;code>miniconda&lt;/code>，遇到一些问题，这里记录一下解决的过程。&lt;/p>
&lt;p>对于其它的linux来说，应该是通用的。&lt;/p>
&lt;h2 id="使用命令行安装miniconda">使用命令行安装miniconda&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">mkdir -p ~/miniconda3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">## 如果使用bash，则把下面命令中的zsh替换成bash：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">zsh ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rm -rf ~/miniconda3/miniconda.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">## 如果使用zsh,则执行：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">~/miniconda3/bin/conda init zsh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">## 如果使用bash，则执行：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">~/miniconda3/bin/conda init bash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="oh-my-zsh主题配置">oh-my-zsh主题配置&lt;/h2>
&lt;p>默认情况下，使用双行显示的oh-my-zsh主题，会在第一行的前面显示&lt;code>(base)&lt;/code>的标志:
&lt;img src="https://example.com/posts/d96c6166/default-base.png"
width="352"
height="78"
srcset="https://example.com/posts/d96c6166/default-base_hue7a70516c9bcb22154f0dd10772c86d9_4091_480x0_resize_box_3.png 480w, https://example.com/posts/d96c6166/default-base_hue7a70516c9bcb22154f0dd10772c86d9_4091_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="451"
data-flex-basis="1083px"
>&lt;br>
这就非常的不美观，因此需要对oh-my-zsh的主题做一些修改。&lt;/p>
&lt;p>这里以&lt;code>gnzh&lt;/code>主题为例。&lt;/p>
&lt;ol>
&lt;li>取消掉&lt;code>miniconda&lt;/code>默认的环境显示：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">conda config --set changeps1 False
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>添加下面代码到gnzh主题的配置文件中&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">local conda_prompt=&amp;#39;$(conda_prompt_info)&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">conda_prompt_info() {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if [ -n &amp;#34;$CONDA_DEFAULT_ENV&amp;#34; ]; then
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> echo -n &amp;#34;%{$terminfo[bold]$fg[yellow]%}($CONDA_DEFAULT_ENV) %{$reset_color%}&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> else
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> echo -n &amp;#39;&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> fi
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>注意：&lt;code>$conda_prompt&lt;/code>一定要写成函数的形式，否则PROMPT只会在启动&lt;code>zsh&lt;/code>的时候获取一次&lt;code>conda&lt;/code>环境信息，后续切换环境就不会再改变了。&lt;/p>
&lt;ol start="3">
&lt;li>在gnzh主题配置文件的合适地方添加&lt;code>${conda_prompt}&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>例如下面：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">PROMPT=&amp;#34;╭─${user_host}${conda_prompt}${current_dir}\$(ruby_prompt_info)${git_branch}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">╰─$PR_PROMPT &amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">RPROMPT=&amp;#34;${return_code}&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>退出并重新进入&lt;code>shell&lt;/code>，即可看到效果。&lt;/p>
&lt;h2 id="默认不启用conda的base环境">默认不启用conda的base环境&lt;/h2>
&lt;p>安装完&lt;code>miniconda&lt;/code>后，每次登录系统都会自动启用默认的&lt;code>base&lt;/code>环境，这就取代了系统自带的&lt;code>python2&lt;/code>和&lt;code>python3&lt;/code>。&lt;/p>
&lt;p>如果想使用系统自带&lt;code>python&lt;/code>环境，有两种方法，推荐使用方法2：&lt;/p>
&lt;ul>
&lt;li>方法1:
手动退出base环境回到系统自带的环境&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">conda deactivate
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>方法2:
取消&lt;code>miniconda&lt;/code>的&lt;code>base&lt;/code>环境自启动设置：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">conda config --set auto_activate_base false
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>要进入&lt;code>base&lt;/code>的话，可以手动运行命令&lt;code>conda activate base&lt;/code>&lt;/p>
&lt;p>加外，如果想让&lt;code>miniconda&lt;/code>的&lt;code>base&lt;/code>环境恢复自启动，可以：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">conda config --set auto_activate_base true
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Kali安装zsh及常用插件</title><link>https://example.com/posts/e9b31c18/</link><pubDate>Sat, 24 Sep 2022 07:26:39 +0800</pubDate><guid>https://example.com/posts/e9b31c18/</guid><description>&lt;blockquote>
&lt;blockquote>
&lt;p>kali在2020.4版本后,已经将zsh设置成了默认终端。
但在一些特殊的环境下,比如wsl2里的kali,仍然使用的是bash&lt;/p>
&lt;/blockquote>
&lt;/blockquote>
&lt;h2 id="查看当前默认系统shell">查看当前默认系统shell&lt;/h2>
&lt;p>&lt;code>echo $SHELL&lt;/code>&lt;/p>
&lt;h2 id="安装zsh和oh-my-zsh">安装zsh和oh-my-zsh&lt;/h2>
&lt;h3 id="zsh">zsh&lt;/h3>
&lt;p>&lt;code>sudo apt install zsh&lt;/code>&lt;/p>
&lt;h3 id="oh-my-zsh">oh-my-zsh&lt;/h3>
&lt;p>&lt;code>sh -c &amp;quot;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&amp;quot;&lt;/code>&lt;/p>
&lt;ul>
&lt;li>需要系统中有&lt;code>curl&lt;/code>和&lt;code>git&lt;/code>&lt;/li>
&lt;li>安装完oh-my-zsh后，会自动提示是否切换到zsh。&lt;/li>
&lt;li>如果没有提示切换系统shell，使用&lt;code>chsh -s /bin/zsh&lt;/code>来切换。&lt;/li>
&lt;/ul>
&lt;h2 id="安装zsh常用插件">安装zsh常用插件&lt;/h2>
&lt;p>最有用的就是3个：&lt;/p>
&lt;ul>
&lt;li>高亮插件&lt;code>zsh-syntax-highlighting&lt;/code>、&lt;/li>
&lt;li>自动实例插件&lt;code>zsh-autosuggestions&lt;/code>、&lt;/li>
&lt;li>跳转插件&lt;code>autojump&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>在&lt;code>debian&lt;/code>或者&lt;code>kali&lt;/code>下，这3个插件都有对应的软件包，直接安装即可。&lt;/p>
&lt;p>其它linux，如果没有对应的软件包，可以用下面手动安装的方式。&lt;/p>
&lt;h3 id="zsh-syntax-highlighting">zsh-syntax-highlighting&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> &lt;span class="nv">$ZSH&lt;/span>/custom/plugins
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git clone https://github.com/zsh-users/zsh-syntax-highlighting.git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="zsh-autosuggestions">zsh-autosuggestions&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> &lt;span class="nv">$ZSH&lt;/span>/custom/plugins
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git clone https://github.com/zsh-users/zsh-autosuggestions.git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="autojump">autojump&lt;/h3>
&lt;p>&lt;code>sudo apt install autojump&lt;/code>&lt;/p>
&lt;h2 id="配置启用插件">配置启用插件&lt;/h2>
&lt;p>除了上面的插件，还有几个插件建议一起启用，都是&lt;code>oh-my-zsh&lt;/code>自带的：&lt;/p>
&lt;ul>
&lt;li>z&lt;/li>
&lt;li>extract&lt;/li>
&lt;li>safe-paste&lt;/li>
&lt;/ul>
&lt;p>打开&lt;code>~/.zshrc&lt;/code>，找到&lt;code>plugins=(git)&lt;/code>这一行，修改成下面的内容：
&lt;code>plugins=(git autojump zsh-autosuggestions zsh-syntax-highlighting z safe-paste extract)&lt;/code>&lt;/p>
&lt;h2 id="配置文件生效">配置文件生效&lt;/h2>
&lt;p>终端下运行命令:
&lt;code>source ~/.zshrc&lt;/code>&lt;/p></description></item></channel></rss>